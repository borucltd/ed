{"version":3,"sources":["components/Container/index.js","components/Row/index.js","components/Header/index.js","components/Worker/index.js","utils/API.js","components/Dictionary/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","className","children","Row","fluid","Header","htmlFor","onChange","handleInputChange","name","type","placeholder","id","Worker","console","log","src","workerData","picture","thumbnail","alt","dob","age","first","last","cell","location","country","query","axios","get","BASEURL","Dictionary","state","result","initial","searchPeople","API","then","res","data","setState","results","catch","err","sortRecords","column","sort","a","b","x","toLowerCase","y","phone","split","length","handleSort","event","preventDefault","target","reg","value","filtered","filter","record","match","this","Table","striped","bordered","hover","variant","onClick","map","item","key","Component","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.95e24cba.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\"\n\nfunction Container(props) {\n  return <div className=\"header\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"Filter\">Filter: </label>\n        <input\n          onChange={props.handleInputChange}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"...\"\n          id=\"search\"\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Worker(props) {\n\n  console.log(\"HEEERE\" + props)\n  return (\n        <tr>\n            <td><img src={props.workerData.picture.thumbnail} alt=\"face\"></img></td>\n            <td>{props.workerData.dob.age}</td>\n            <td>{props.workerData.name.first}</td>\n            <td>{props.workerData.name.last} </td>\n            <td>{props.workerData.cell}</td>\n            <td>{props.workerData.location.country} </td>\n        </tr>\n  )\n}\n\nexport default Worker;\n","import axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/\";\nconst APIRESULTS = \"?results=20\";\n\n\nexport default {\n  search: function(query) {\n    // https://randomuser.me/api/?results=20\n    return axios.get(BASEURL + APIRESULTS);\n  }\n};\n","import React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport Row from \"../Row\";\nimport Header from \"../Header\";\nimport Worker from \"../Worker\";\nimport Table from 'react-bootstrap/Table';\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\n\nclass Dictionary extends Component {\n\n  // Setting the component's initial state\n  state = {\n    result: [],\n    initial: []\n  };\n\n  // when component is mounted (once only)\n  componentDidMount() {\n     this.searchPeople();\n  }\n\n  // custom method which runs API\n  searchPeople = query => {\n     API.search(query)\n        .then(res => {console.log(res.data); this.setState({ \n          result: res.data.results,\n          initial: res.data.results\n        })})\n        .catch(err => console.log(err));\n  };\n\n  // sort records\n  sortRecords = (column) => {\n\n    console.log(\"Sorting...\" + column)\n    // here the sorting will be different for different columns\n    switch(column) {\n      case \"age\":\n        this.setState({\n          result: this.state.result.sort(function(a, b){return a.dob.age - b.dob.age})\n        })\n        break;\n\n      case \"first\":\n        this.setState({\n          result: this.state.result.sort(function(a, b){\n            let x = a.name.first.toLowerCase();\n            let y = b.name.first.toLowerCase();\n            if (x < y) {return -1;}\n            if (x > y) {return 1;}\n            return 0;\n          })});\n        \n        break;\n\n      case \"last\":\n        this.setState({\n          result: this.state.result.sort(function(a, b){\n            let x = a.name.last.toLowerCase();\n            let y = b.name.last.toLowerCase();\n            if (x < y) {return -1;}\n            if (x > y) {return 1;}\n            return 0;           \n          })});\n        break;\n\n      case \"mobile\":\n        this.setState({\n          result: this.state.result.sort(function(a, b){\n            let x = a.phone.split(\"\");\n            let y = b.phone.split(\"\");\n            if (x.length < y.length) {return -1;}\n            if (x.length > y.length) {return 1;}\n            return 0;\n            })});\n        break;\n\n      case \"country\":\n        this.setState({\n          result: this.state.result.sort(function(a, b){\n            let x = a.location.country.toLowerCase();\n            let y = b.location.country.toLowerCase();\n            if (x < y) {return -1;}\n            if (x > y) {return 1;}\n            return 0;\n          })});\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  \n  // sort handler\n  handleSort = event => {\n    event.preventDefault();\n    this.sortRecords(event.target.name);\n  }\n\n  // filter handler\n  handleInputChange = event => {\n    console.log(this.state.initial)\n    \n    event.preventDefault();\n    // getting the value which triggered the change\n    const reg  = `^${event.target.value}.*`;\n    console.log(\"Filtering...\" + reg)\n    // filter per first name\n    const filtered =  this.state.initial.filter(function(record){\n      return record.name.first.match(reg);\n    })\n    console.log(filtered.length);\n    if (filtered.length !== 0) {\n      this.setState({\n        result: filtered\n      })\n    } else {\n      this.setState({\n        result: this.state.initial\n      })\n    }       \n  }\n\n  render() {\n    return (\n        <Container>   \n          <Row>   \n             \n                  <h1>Employee directory</h1>\n                  <Header handleInputChange={this.handleInputChange}  \n                  />\n\n                  <Table striped bordered hover variant=\"dark\">\n                      <thead>\n                          <tr>\n                          <th>Photo</th>\n                          <th><button onClick={this.handleSort} name=\"age\">Age</button></th>\n                          <th><button onClick={this.handleSort} name=\"first\">First Name</button></th>\n                          <th><button onClick={this.handleSort} name=\"last\">Last Name</button></th>\n                          <th><button onClick={this.handleSort} name=\"mobile\">Mobile</button></th>\n                          <th><button onClick={this.handleSort} name=\"country\">Country</button></th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                         {this.state.result.map((item,id) => (\n                            <Worker key={id} workerData={item}></Worker>\n                          ))}\n                      </tbody>    \n                  </Table>\n                  \n                  </Row>   \n        </Container>\n    )\n  }\n}\n\nexport default Dictionary;\n","import React from 'react';\nimport Dictionary from \"./components/Dictionary\";\n\n\nfunction App() {\n  return <Dictionary/>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}